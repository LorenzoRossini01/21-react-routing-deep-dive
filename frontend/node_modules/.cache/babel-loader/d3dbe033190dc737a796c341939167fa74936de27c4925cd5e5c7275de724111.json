{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loryr\\\\Desktop\\\\Corso React\\\\21-react-routing-deep-dive\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport { Await, defer, redirect, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem.js\";\nimport EventsList from \"../components/EventsList.js\";\nimport { Suspense } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const {\n    events,\n    event\n  } = useRouteLoaderData(\"event-detail\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: \"Loading\",\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: events,\n        children: [/*#__PURE__*/_jsxDEV(EventItem, {\n          event: event\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EventsList, {\n          events: events\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(EventDetailPage, \"ighIuDNAfEiYdfc9z3VDfC6KNkA=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nasync function loadEvent(id) {\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: \"Error fetching event details\"\n    }), {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.event;\n  }\n}\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // return { isError: true, message: \"Error while fetching events!\" };\n    throw new Response(JSON.stringify({\n      message: \"Error while fetching events.\"\n    }), {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  return defer({\n    event: loadEvent(id),\n    events: loadEvents()\n  });\n}\nexport async function action({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + id, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: \"Error deleting event\"\n    }), {\n      status: 500\n    });\n  } else {\n    return response && redirect(\"/events\");\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["Await","defer","redirect","useRouteLoaderData","EventItem","EventsList","Suspense","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","events","event","children","fallback","resolve","fileName","_jsxFileName","lineNumber","columnNumber","_c","loadEvent","id","response","fetch","ok","Response","JSON","stringify","message","status","resData","json","loadEvents","loader","request","params","eventId","action","method","$RefreshReg$"],"sources":["C:/Users/loryr/Desktop/Corso React/21-react-routing-deep-dive/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { Await, defer, redirect, useRouteLoaderData } from \"react-router-dom\";\r\nimport EventItem from \"../components/EventItem.js\";\r\nimport EventsList from \"../components/EventsList.js\";\r\nimport { Suspense } from \"react\";\r\n\r\nconst EventDetailPage = () => {\r\n  const { events, event } = useRouteLoaderData(\"event-detail\");\r\n  return (\r\n    <>\r\n      <Suspense fallback=\"Loading\">\r\n        <Await resolve={events}>\r\n          <EventItem event={event} />\r\n          <EventsList events={events} />\r\n        </Await>\r\n      </Suspense>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EventDetailPage;\r\n\r\nasync function loadEvent(id) {\r\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\r\n\r\n  if (!response.ok) {\r\n    throw new Response(\r\n      JSON.stringify({ message: \"Error fetching event details\" }),\r\n      { status: 500 }\r\n    );\r\n  } else {\r\n    const resData = await response.json();\r\n    return resData.event;\r\n  }\r\n}\r\n\r\nasync function loadEvents() {\r\n  const response = await fetch(\"http://localhost:8080/events\");\r\n\r\n  if (!response.ok) {\r\n    // return { isError: true, message: \"Error while fetching events!\" };\r\n    throw new Response(\r\n      JSON.stringify({ message: \"Error while fetching events.\" }),\r\n      { status: 500 }\r\n    );\r\n  } else {\r\n    const resData = await response.json();\r\n    return resData.events;\r\n  }\r\n}\r\n\r\nexport async function loader({ request, params }) {\r\n  const id = params.eventId;\r\n  return defer({\r\n    event: loadEvent(id),\r\n    events: loadEvents(),\r\n  });\r\n}\r\n\r\nexport async function action({ request, params }) {\r\n  const id = params.eventId;\r\n\r\n  const response = await fetch(\"http://localhost:8080/events/\" + id, {\r\n    method: request.method,\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Response(JSON.stringify({ message: \"Error deleting event\" }), {\r\n      status: 500,\r\n    });\r\n  } else {\r\n    return response && redirect(\"/events\");\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}